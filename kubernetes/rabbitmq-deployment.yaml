apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
data:
  rabbitmq.conf: |
    # Network settings
    listeners.tcp.default = 5672
    management.tcp.port = 15672
    
    # Memory and disk settings
    vm_memory_high_watermark.relative = 0.6
    disk_free_limit.relative = 2.0
    
    # Logging
    log.console = true
    log.console.level = info
    log.file = false
    
    # Performance tuning
    num_acceptors.tcp = 10
    handshake_timeout = 10000
    heartbeat = 60
    
    # Queue settings
    queue_master_locator = min-masters
    default_consumer_prefetch = 50
    
    # Security
    default_vhost = /
    default_user = emotibot
    default_pass = emotibot_pass
    default_permissions.configure = .*
    default_permissions.read = .*
    default_permissions.write = .*
    
    # Management plugin
    management.load_definitions = /etc/rabbitmq/definitions.json
    
    # Message persistence
    default_apply_policy = all
    default_policy_vhost = /
    default_policy_priority = 0
    default_policy_pattern = .*
    default_policy_definition.ha-mode = all
    default_policy_definition.ha-sync-mode = automatic

---
apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq-secrets
type: Opaque
data:
  rabbitmq-user: ZW1vdGlib3Q=  # emotibot
  rabbitmq-pass: ZW1vdGlib3RfcGFzcw==  # emotibot_pass
  admin-user: YWRtaW4=  # admin
  admin-pass: YWRtaW5fcGFzcw==  # admin_pass

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  labels:
    app: rabbitmq
    component: message-queue
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
        component: message-queue
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "15692"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3.12-management
        ports:
        - containerPort: 5672
          name: amqp
        - containerPort: 15672
          name: management
        - containerPort: 15692
          name: metrics
        env:
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secrets
              key: rabbitmq-user
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secrets
              key: rabbitmq-pass
        - name: RABBITMQ_DEFAULT_VHOST
          value: "/"
        - name: RABBITMQ_ERLANG_COOKIE
          value: "emotibot-cookie"
        volumeMounts:
        - name: rabbitmq-config
          mountPath: /etc/rabbitmq/rabbitmq.conf
          subPath: rabbitmq.conf
        - name: rabbitmq-definitions
          mountPath: /etc/rabbitmq/definitions.json
          subPath: definitions.json
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - rabbitmq-diagnostics
            - ping
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - rabbitmq-diagnostics
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: rabbitmq-config
        configMap:
          name: rabbitmq-config
      - name: rabbitmq-definitions
        configMap:
          name: rabbitmq-definitions
      - name: rabbitmq-data
        persistentVolumeClaim:
          claimName: rabbitmq-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
  labels:
    app: rabbitmq
    component: message-queue
spec:
  selector:
    app: rabbitmq
  ports:
  - name: amqp
    port: 5672
    targetPort: 5672
    protocol: TCP
  - name: management
    port: 15672
    targetPort: 15672
    protocol: TCP
  - name: metrics
    port: 15692
    targetPort: 15692
    protocol: TCP
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rabbitmq-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: rabbitmq.emotibot.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rabbitmq-service
            port:
              number: 15672 