version: '3.8'

services:
  web:
    build: .
    ports:
      - "5001:5001"
    environment:
      - FLASK_APP=run_app.py
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://emotibot:${POSTGRES_PASSWORD}@db:5432/emotibotdb
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - PYTHONUNBUFFERED=1
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - emotibot-network

  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=emotibot
      - POSTGRES_DB=emotibotdb
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U emotibot"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - emotibot-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      web:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - emotibot-network

volumes:
  postgres_data:

networks:
  emotibot-network:
    driver: bridge 